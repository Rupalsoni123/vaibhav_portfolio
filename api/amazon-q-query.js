// Vercel API Route: /api/amazon-q-query
export default async function handler(req, res) {
  // Set CORS headers
  res.setHeader('Access-Control-Allow-Credentials', true);
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');
  res.setHeader('Access-Control-Allow-Headers', 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version');

  // Handle preflight requests
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  // Only allow POST requests
  if (req.method !== 'POST') {
    res.status(405).json({ error: 'Method not allowed' });
    return;
  }

  const startTime = Date.now();
  const { question, context = '', userId = 'anonymous' } = req.body;

  // SECURITY: Input validation and command restrictions
  if (!question || question.trim().length === 0) {
    res.status(400).json({
      error: 'Question is required',
      message: 'Please provide a valid question'
    });
    return;
  }

  // SECURITY: Sanitize input and block dangerous commands
  const sanitizedQuestion = question.replace(/[;&|`$(){}[\]]/g, '').trim();
  
  // SECURITY: Block dangerous patterns
  const blockedPatterns = [
    /mcp[_-]?server/i, /mcp.*invoke/i, /mcp.*tool/i, /mcp.*protocol/i,
    /aws\s+.*create/i, /aws\s+.*delete/i, /aws\s+.*modify/i, /aws\s+.*update/i,
    /aws\s+.*put/i, /aws\s+.*deploy/i, /aws\s+.*launch/i, /aws\s+.*terminate/i,
    /terraform\s+apply/i, /terraform\s+destroy/i, /cdk\s+deploy/i, /cdk\s+destroy/i,
    /kubectl\s+create/i, /kubectl\s+apply/i, /kubectl\s+delete/i, /kubectl\s+deploy/i,
    /docker\s+run/i, /docker\s+deploy/i, /docker\s+create/i,
    /\$\(/, /`.*`/, /\|\s*sh/i, /\|\s*bash/i, /\|\s*exec/i,
    /sudo/i, /chmod/i, /chown/i, /rm\s+-rf/i, /curl.*\|/i, /wget.*\|/i, /nc\s+/i, /netcat/i
  ];
  
  const isBlocked = blockedPatterns.some(pattern => pattern.test(sanitizedQuestion));
  
  if (isBlocked) {
    res.status(403).json({
      error: 'Security Restriction',
      message: 'This request contains potentially dangerous commands that are not allowed.',
      details: 'The chatbot is restricted from executing commands that could create, modify, or delete cloud services.',
      allowedQueries: [
        'General AWS questions and explanations',
        'Best practices and architecture guidance',
        'Troubleshooting and learning resources'
      ]
    });
    return;
  }
  
  if (sanitizedQuestion.length > 500) {
    res.status(400).json({
      error: 'Question too long',
      message: 'Please keep questions under 500 characters'
    });
    return;
  }

  try {
    const response = {
      success: true,
      response: generateIntelligentAWSResponse(sanitizedQuestion),
      source: 'Built-in AWS Knowledge (Vercel)',
      timestamp: new Date().toISOString(),
      processingTime: Date.now() - startTime,
      metadata: {
        questionLength: sanitizedQuestion.length,
        category: categorizeQuestion(sanitizedQuestion),
        fallback: true,
        environment: 'vercel'
      }
    };

    res.status(200).json(response);
  } catch (error) {
    console.error('Error generating response:', error);
    res.status(500).json({
      error: 'Internal server error',
      message: 'Failed to generate response'
    });
  }
}

// Helper functions
function generateIntelligentAWSResponse(question) {
  const lowerQuestion = question.toLowerCase();
  
  if (lowerQuestion === 'aws' || lowerQuestion === 'what is aws') {
    return `**Amazon Web Services (AWS)** is the world's most comprehensive cloud platform.

**üîß Core Services:**
‚Ä¢ **Compute:** EC2, Lambda, ECS, EKS, Fargate
‚Ä¢ **Storage:** S3, EBS, EFS, Glacier
‚Ä¢ **Database:** RDS, DynamoDB, ElastiCache, Redshift
‚Ä¢ **Networking:** VPC, CloudFront, Route 53, Load Balancers
‚Ä¢ **Security:** IAM, KMS, WAF, Shield, Secrets Manager

**üí° Key Benefits:**
‚Ä¢ **Scalability:** Scale resources up or down instantly
‚Ä¢ **Cost-Effective:** Pay only for what you use
‚Ä¢ **Reliability:** 99.99% uptime SLA with global infrastructure
‚Ä¢ **Security:** Enterprise-grade security and compliance
‚Ä¢ **Innovation:** 200+ services with continuous updates

**üöÄ Popular Use Cases:**
‚Ä¢ Web applications and mobile backends
‚Ä¢ Data backup and disaster recovery
‚Ä¢ Big data analytics and machine learning
‚Ä¢ Content delivery and media streaming
‚Ä¢ Enterprise application migration

**üìà Getting Started:**
1. Create AWS Free Tier account
2. Learn core services (EC2, S3, RDS)
3. Follow AWS Well-Architected Framework
4. Implement security best practices
5. Use Infrastructure as Code (CloudFormation/CDK)

Would you like me to explain any specific AWS service or concept in detail?`;
  }
  
  if (lowerQuestion.includes('ec2')) {
    return `**Amazon EC2 (Elastic Compute Cloud)** provides scalable virtual servers.

**üñ•Ô∏è Key Features:**
‚Ä¢ **Instance Types:** Optimized for compute, memory, storage, or GPU workloads
‚Ä¢ **Auto Scaling:** Automatically adjust capacity based on demand
‚Ä¢ **Load Balancing:** Distribute traffic across multiple instances
‚Ä¢ **Security Groups:** Virtual firewalls for network access control

**üìä Instance Categories:**
‚Ä¢ **General Purpose:** t3, m5, m6i - Balanced compute, memory, networking
‚Ä¢ **Compute Optimized:** c5, c6i - High-performance processors
‚Ä¢ **Memory Optimized:** r5, r6i, x1e - Fast performance for memory-intensive workloads
‚Ä¢ **Storage Optimized:** i3, d2 - High sequential read/write access to large datasets

**üí∞ Pricing Models:**
‚Ä¢ **On-Demand:** Pay by hour/second with no commitments
‚Ä¢ **Reserved Instances:** 1-3 year terms for up to 75% savings
‚Ä¢ **Spot Instances:** Bid on spare capacity for up to 90% savings
‚Ä¢ **Dedicated Hosts:** Physical servers for compliance requirements

**üõ°Ô∏è Best Practices:**
‚Ä¢ Use Auto Scaling Groups for high availability
‚Ä¢ Implement proper security groups (least privilege)
‚Ä¢ Regular backups with EBS snapshots
‚Ä¢ Monitor performance with CloudWatch
‚Ä¢ Use placement groups for network performance
‚Ä¢ Tag resources for cost management

What specific aspect of EC2 would you like to explore further?`;
  }
  
  if (lowerQuestion.includes('s3')) {
    return `**Amazon S3 (Simple Storage Service)** is object storage for the internet.

**üóÑÔ∏è Key Features:**
‚Ä¢ **Unlimited Storage:** Store virtually unlimited amounts of data
‚Ä¢ **11 9's Durability:** 99.999999999% durability guarantee
‚Ä¢ **Global Accessibility:** Access from anywhere via REST API
‚Ä¢ **Versioning:** Keep multiple versions of objects

**üì¶ Storage Classes:**
‚Ä¢ **Standard:** Frequently accessed data (millisecond access)
‚Ä¢ **Standard-IA:** Infrequently accessed (lower cost, retrieval fee)
‚Ä¢ **One Zone-IA:** Single AZ storage for non-critical data
‚Ä¢ **Glacier Instant Retrieval:** Archive with millisecond access
‚Ä¢ **Glacier Flexible Retrieval:** 1-12 hours retrieval time
‚Ä¢ **Glacier Deep Archive:** Lowest cost, 12+ hours retrieval

**üîí Security Features:**
‚Ä¢ **Encryption:** Server-side and client-side encryption
‚Ä¢ **Access Control:** IAM policies, bucket policies, ACLs
‚Ä¢ **Versioning:** Protect against accidental deletion
‚Ä¢ **MFA Delete:** Require multi-factor authentication
‚Ä¢ **Access Logging:** Track requests for security auditing

**üí° Common Use Cases:**
‚Ä¢ Static website hosting
‚Ä¢ Data backup and archival
‚Ä¢ Content distribution (with CloudFront)
‚Ä¢ Data lakes for analytics
‚Ä¢ Application data storage
‚Ä¢ Disaster recovery

**üéØ Best Practices:**
‚Ä¢ Enable versioning for critical data
‚Ä¢ Use lifecycle policies to optimize costs
‚Ä¢ Implement least privilege access
‚Ä¢ Enable CloudTrail for API logging
‚Ä¢ Use S3 Transfer Acceleration for global uploads
‚Ä¢ Monitor costs with S3 Storage Lens

What specific S3 feature would you like me to explain?`;
  }
  
  return `**AWS Question Detected!** I can help you understand AWS services and concepts.

**üîß What I Can Explain:**
‚Ä¢ **Core Services:** EC2, S3, Lambda, RDS, VPC, IAM
‚Ä¢ **Architecture:** Design patterns, best practices, cost optimization
‚Ä¢ **Security:** IAM, encryption, compliance, monitoring
‚Ä¢ **DevOps:** CI/CD, Infrastructure as Code, containerization
‚Ä¢ **Databases:** RDS, DynamoDB, ElastiCache, data strategies
‚Ä¢ **Networking:** VPC, CloudFront, Route 53, load balancing

**üí° Popular Topics:**
‚Ä¢ "How does AWS Lambda work?"
‚Ä¢ "S3 storage classes and pricing"
‚Ä¢ "VPC networking best practices"
‚Ä¢ "RDS vs DynamoDB comparison"
‚Ä¢ "IAM security best practices"
‚Ä¢ "Cost optimization strategies"

What specific AWS topic would you like me to explain in detail?`;
}

function categorizeQuestion(question) {
  const lowerQuestion = question.toLowerCase();
  if (lowerQuestion.includes('ec2') || lowerQuestion.includes('instance')) return 'compute';
  if (lowerQuestion.includes('s3') || lowerQuestion.includes('bucket')) return 'storage';
  if (lowerQuestion.includes('lambda') || lowerQuestion.includes('function')) return 'serverless';
  if (lowerQuestion.includes('rds') || lowerQuestion.includes('database')) return 'database';
  if (lowerQuestion.includes('vpc') || lowerQuestion.includes('network')) return 'networking';
  if (lowerQuestion.includes('iam') || lowerQuestion.includes('security')) return 'security';
  return 'general';
}
